{"version":3,"sources":["TodoContext.js","hooks/useLocalStorage.js","components/TodoCounter/TodoCounter.js","components/TodoSearch/TodoSearch.js","components/TodoItem/TodoItem.js","components/Error/Error.js","components/Loading/Loading.js","components/Empty/Empty.js","components/TodoList/TodoList.js","components/CreateTodoButton/CreateTodoButton.js","components/Logo/Logo.js","components/Modal/Modal.js","components/TodoForm/TodoForm.js","AppUI.js","App.js","index.js"],"names":["TodoContext","createContext","TodoProvider","children","itemName","initialValue","useState","items","setItems","loading","setLoading","error","setError","useEffect","setTimeout","itemsStorage","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","saveItemsLocalStorage","newItem","stringifiedItems","useLocalStorage","todos","saveTodosLocalStorage","openModal","setOpenModal","searchValue","setSearchValue","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","arrayTodos","completeTodos","todoIndex","findIndex","deleteTodos","splice","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoItem","onClick","Error","Loading","Empty","TodoList","Array","fill","map","index","item","CreateTodoButton","Logo","props","width","height","xmlns","viewBox","preserveAspectRatio","id","x","y","result","floodColor","order","divisor","kernelMatrix","in","in2","operator","dx","dy","d","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","e","preventDefault","type","AppUI","App","render"],"mappings":"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","file":"static/js/main.27dd61e4.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\n// Importando custom hooks\r\nimport {useLocalStorage} from \"./hooks/useLocalStorage\";\r\n\r\n// Creando el contexto de la aplicación\r\nconst TodoContext = createContext();\r\n\r\nconst TodoProvider = ({ children }) => {\r\n  // Llamando el customHook\r\n  const {\r\n    items: todos,\r\n    saveItemsLocalStorage: saveTodosLocalStorage,\r\n    loading,\r\n    error,\r\n  } = useLocalStorage(\"TODOS_V1\", []);\r\n\r\n  // Manejando estado del modal\r\n  const [openModal, setOpenModal]=useState(false);\r\n\r\n  // Manejando estado del searchValue\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  // Filtrando el array de tareas para filtrar las tareas completadas\r\n  const completedTodos = todos.filter((todo) => todo.completed === true).length;\r\n  // Total de tareas\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedTodos = [];\r\n\r\n  // Validando que tareas mostrar\r\n  if (!searchValue.length >= 1) {\r\n    // Si el usuario no escribe nada en el input de busqueda mostramos todas las tareas\r\n    searchedTodos = todos;\r\n  } else {\r\n    // Si el usuario escribe algo, filtramos y almacenamos en la nueva variable las tareas encontradas\r\n    searchedTodos = todos.filter((todo) => {\r\n      const todoText = todo.text.toLowerCase();\r\n      const searchText = searchValue.toLowerCase();\r\n      return todoText.includes(searchText);\r\n    });\r\n  }\r\n\r\n  // Controlando las tareas completadas\r\n  const completeTodos = (text) => {\r\n    // Obteniendo la posicion de los text que concuerden\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n    // Almacenamos todos los elementos del array toDos y cambiamos el valor del atributo completed de la tarea seleccionada\r\n    const newTodos = [...todos];\r\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\r\n    saveTodosLocalStorage(newTodos);\r\n  };\r\n\r\n  // Controlando las tareas a eliminar\r\n  const deleteTodos = (text) => {\r\n    // Obteniendo la posicion de los text que concuerden\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n    // Almacenando todos los elementos del array y eliminando la tarea seleccionada\r\n    const newTodos = [...todos];\r\n    // Eliminando a partir de la posición encontrada, una tarea\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodosLocalStorage(newTodos);\r\n  };\r\n\r\n  // Guardando tareas en el array\r\n  const addTodo=(text)=>{\r\n    const newTodos=[...todos];\r\n    // Insertando la nueva tarea en el array\r\n    newTodos.push({\r\n      text,\r\n      completed:false\r\n    });\r\n    saveTodosLocalStorage(newTodos);\r\n  }\r\n\r\n  return (\r\n    // Envolviendo nuestra aplicación para que puedar utilizar el Context\r\n    <TodoContext.Provider value={{\r\n        loading,\r\n        error,\r\n        completedTodos,\r\n        totalTodos,\r\n        searchValue,\r\n        setSearchValue,\r\n        addTodo,\r\n        arrayTodos: searchedTodos,\r\n        completeTodos,\r\n        deleteTodos,\r\n        openModal, \r\n        setOpenModal,\r\n    }}>\r\n        {children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n\r\nexport {TodoContext, TodoProvider};\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Los atributos que reciben son el nombre de elemento a guardar en el local y el valor inicial de ese item\r\nconst useLocalStorage = (itemName, initialValue) => {\r\n  // Manejando estado del array de elementos\r\n  const [items, setItems] = useState(initialValue);\r\n  // Manejando estado de carga\r\n  const [loading, setLoading]=useState(true);\r\n  // Manejando estado de error\r\n  const [error, setError]=useState(false);\r\n\r\n  useEffect(()=>{\r\n    setTimeout(()=>{\r\n      try {\r\n        // Implementando localstorage\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        let itemsStorage;\r\n\r\n        // Validando si el localstorage es vacio o no\r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          itemsStorage = initialValue;\r\n        } else {\r\n          itemsStorage = JSON.parse(localStorageItem);\r\n        }\r\n\r\n        setItems(itemsStorage);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    },1500)\r\n  })\r\n  \r\n  // Función para guardar la información en el localStorage\r\n  const saveItemsLocalStorage = (newItem) => {\r\n    try {\r\n      const stringifiedItems = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItems);\r\n      setItems(newItem);\r\n    } catch (error) {\r\n      setError(error)\r\n    } \r\n  };\r\n\r\n  return {items, saveItemsLocalStorage, loading, error};\r\n};\r\n\r\nexport { useLocalStorage };\r\n","import React, {useContext} from 'react';\r\n\r\n// Importando contexto\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\n// Importando estilos\r\nimport './TodoCounter.css';\r\n\r\nconst TodoCounter = () => {\r\n    const {completedTodos,totalTodos}=useContext(TodoContext);\r\n    return (  \r\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} tareas</h2>\r\n    );\r\n}\r\n \r\nexport {TodoCounter};","import React, { useContext } from 'react';\r\n\r\n// Importando contexto\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\n// Importando estilos\r\nimport './TodoSearch.css';\r\n\r\nconst TodoSearch = () => {\r\n    const {searchValue, setSearchValue}=useContext(TodoContext);\r\n\r\n    // Función que se ejecuta al escribir algo en el input\r\n    const onSearchValueChange=(event)=>{\r\n        // console.log(event.target.value);\r\n        setSearchValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <input \r\n            className=\"TodoSearch\" \r\n            placeholder=\"Busca una tarea\"\r\n            value={searchValue}\r\n            onChange={onSearchValueChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport { TodoSearch };","import React from \"react\";\r\n\r\n// Importando estilos\r\nimport \"./TodoItem.css\";\r\n\r\nconst TodoItem = ({ text, completed, completeTodos, deleteTodos }) => {\r\n  return (\r\n    <li className=\"TodoItem\">\r\n      {/* Si completo es true, agregamos la clase de css */}\r\n      <span\r\n        className={`Icon Icon-check ${completed && \"Icon-check--active\"}`}\r\n        onClick={completeTodos}\r\n      >\r\n        ✔\r\n      </span>\r\n      {/* Si completo es true, agregamos la clase de css */}\r\n      <p className={`TodoItem-p ${completed && \"TodoItem-p--complete\"}`}>\r\n        {text}\r\n      </p>\r\n      <span className=\"Icon Icon-delete\" onClick={deleteTodos}>\r\n        X\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { TodoItem };\r\n","import React from 'react';\r\n\r\n// Importando estilos\r\nimport './Error.css';\r\n\r\nconst Error = () => {\r\n    return <p>Ocurrio un error.... 😔❌</p>;\r\n}\r\n \r\nexport {Error};","import React from \"react\";\r\n\r\n// Importando estilos\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <li className=\"TodoItem-loading\">\r\n      <div className=\"LoaderBalls\">\r\n        <span className=\"LoaderBalls__item\"></span>\r\n        <span className=\"LoaderBalls__item\"></span>\r\n        <span className=\"LoaderBalls__item\"></span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { Loading };\r\n","import React from 'react';\r\n\r\n// Importando estilos\r\nimport './Empty.css';\r\n\r\nconst Empty = () => {\r\n    return <p>¡Crea tu primer TODO!</p>;\r\n}\r\n \r\nexport {Empty};","import React, { useContext } from \"react\";\r\n\r\n// Importando contexto\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\n// Importando componentes\r\nimport { TodoItem } from \"../TodoItem/TodoItem\";\r\nimport {Error} from \"../Error/Error\";\r\nimport {Loading} from \"../Loading/Loading\";\r\nimport {Empty} from \"../Empty/Empty\";\r\n\r\n// Importando estilos\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = () => {\r\n  const {arrayTodos, completeTodos, deleteTodos, error, loading}=useContext(TodoContext);\r\n  return (\r\n    <section>\r\n      <ul>\r\n        {error && <Error />}\r\n        {loading &&\r\n          new Array(5).fill().map((index) => <Loading key={index} />)}\r\n        {!loading && !arrayTodos.length && <Empty />}\r\n        {\r\n          // Mapeando el array de TODOS\r\n          arrayTodos.map((item) => (\r\n            <TodoItem\r\n              key={item.text}\r\n              {...item}\r\n              completeTodos={() => completeTodos(item.text)}\r\n              deleteTodos={() => deleteTodos(item.text)}\r\n            />\r\n          ))\r\n        }\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { TodoList };\r\n","import React from 'react';\r\n\r\n// Importando estilos\r\nimport './CreateTodoButton.css';\r\n\r\nconst CreateTodoButton = ({setOpenModal,openModal}) => {\r\n    // Función que se ejecuta al dar click en el button\r\n    const onClickButton=()=>{\r\n        setOpenModal(!openModal);\r\n    }\r\n\r\n    return (  \r\n        <button \r\n            className=\"CreateTodoButton\"\r\n            onClick={onClickButton}\r\n        >\r\n        +</button>\r\n    );\r\n}\r\n \r\nexport {CreateTodoButton};","import * as React from \"react\";\r\n\r\n// Importando estilos\r\nimport './Logo.css';\r\n\r\nconst Logo = (props)=> {\r\n  return (\r\n    <svg\r\n      width={374.174}\r\n      height={122.021}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"62.913 13.989 374.174 122.021\"\r\n      preserveAspectRatio=\"xMidYMid\"\r\n      {...props}\r\n      className=\"Logo\"\r\n    >\r\n      <defs>\r\n        <filter\r\n          id=\"prefix__editing-extrusion\"\r\n          x=\"-100%\"\r\n          y=\"-100%\"\r\n          width=\"300%\"\r\n          height=\"300%\"\r\n        >\r\n          <feFlood result=\"color1\" floodColor=\"#85a2b6\" />\r\n          <feConvolveMatrix\r\n            order=\"6,6\"\r\n            divisor={1}\r\n            kernelMatrix=\"1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1\"\r\n            in=\"SourceAlpha\"\r\n            result=\"extrude\"\r\n          />\r\n          <feComposite\r\n            in=\"color1\"\r\n            in2=\"extrude\"\r\n            result=\"comp-extrude\"\r\n            operator=\"in\"\r\n          />\r\n          <feOffset dx={3} dy={3} in=\"comp-extrude\" result=\"offset-extrude\" />\r\n          <feMerge>\r\n            <feMergeNode in=\"offset-extrude\" />\r\n            <feMergeNode in=\"SourceGraphic\" />\r\n          </feMerge>\r\n        </filter>\r\n      </defs>\r\n      <g filter=\"url(#prefix__editing-extrusion)\">\r\n        <path\r\n          d=\"M125.772 67.822q-2.18-1.66-2.18-5.21 0-3.56 2.34-5.41 2.33-1.86 6.37-1.86 2.56 0 8.64.9l4.35.64q2.17.25 4.45.25 2.27 0 3.8-.96 2.31 2.05 2.31 5 0 2.94-2.63 5.05-2.68 2.24-6.14 2.24-1.66 0-4.35-.45-3.14 9.86-3.14 16.71 0 6.85 3.46 10.43-1.6 2.88-3.97 4t-5.92 1.12q-3.55 0-5.76-1.95t-2.21-5.99q0-4.67 2.56-12.35 2.56-7.61 6.4-13.44-1.85-.19-3.77-.19-3.97 0-4.61 1.47zm39.04 32.45q-14.08 0-14.08-13.25 0-9.41 5.18-15.49 5.51-6.46 15.04-6.46 6.91 0 10.43 3.2 3.52 3.2 3.52 9.92 0 10.24-5.5 16.19-5.38 5.89-14.59 5.89zm1.66-27.84q-.77 1.73-1.37 4.32-.61 2.59-1.38 6.69-.77 4.09-.77 9.15 0 1.66.55 2.75.54 1.09 2.01 1.09 1.47 0 2.4-.7.93-.71 1.63-2.37 1.28-2.95 2.31-8.42 1.02-5.47 1.12-7.84.09-2.37.09-4.13 0-1.76-.51-2.91-.51-1.15-1.95-1.15t-2.4.9q-.96.89-1.73 2.62zm63.75 0q0 27.26-29.57 27.26-4.74 0-12.55-1.15l7.17-37.82q.51-2.56.83-4.03 9.73-.71 14.05-.71t8.29.9q3.97.89 6.59 2.88 5.19 3.9 5.19 12.67zm-13.19-2.37q0-9.53-6.85-9.53h-.64q-.32 0-.64.06l-6.59 34.37q.26.13.51.13h.52q2.36 0 4.83-1.48 2.46-1.47 4.38-4.48 4.48-6.97 4.48-19.07zm30.4 30.21q-14.08 0-14.08-13.25 0-9.41 5.19-15.49 5.5-6.46 15.04-6.46 6.91 0 10.43 3.2 3.52 3.2 3.52 9.92 0 10.24-5.51 16.19-5.37 5.89-14.59 5.89zm1.67-27.84q-.77 1.73-1.38 4.32-.61 2.59-1.38 6.69-.76 4.09-.76 9.15 0 1.66.54 2.75t2.02 1.09q1.47 0 2.4-.7.92-.71 1.63-2.37 1.28-2.95 2.3-8.42 1.03-5.47 1.12-7.84.1-2.37.1-4.13 0-1.76-.51-2.91-.52-1.15-1.96-1.15t-2.4.9q-.96.89-1.72 2.62zm48.96 16.7q1.21 1.54 1.21 4.52 0 2.97-2.27 4.8-2.27 1.82-6.24 1.82-2.3 0-5.89-.51-7.04-1.09-9.05-1.09-2.02 0-2.85.1-.83.09-2.18.22l7.75-42.24h14.01l-6.4 35.2q.83.13 1.6.13h1.6q5.38 0 8.71-2.95zm20.86 6.34q-1.98 4.8-8.32 4.8-3.26 0-5.31-2.24-1.73-1.98-1.73-3.97 0-5.18 2.37-15.29l2.37-12.42 12.99-1.28-3.91 20.22q-1.08 4.74-1.08 6.4 0 3.65 2.62 3.78zm-9.47-38.02q0-2.49 2.08-3.84 2.08-1.34 5.09-1.34 3 0 4.83 1.34 1.82 1.35 1.82 3.84 0 2.5-2.01 3.78-2.02 1.28-5.03 1.28-3.01 0-4.89-1.28-1.89-1.28-1.89-3.78zm34.05 19.08q.89-2.37.89-4.42 0-3.78-3.07-3.78-1.6 0-2.91 1.44t-1.31 3.24q0 1.28 1.02 2.3 1.47 1.41 5.25 3.71 3.77 2.31 5.21 4.19 1.44 1.89 1.44 4.48 0 2.6-1.24 4.96-1.25 2.37-3.49 4.04-4.8 3.58-12.48 3.58-4.16 0-7.36-2.18-3.2-2.11-3.2-4.6 0-2.5 1.82-3.97 1.83-1.47 4.51-1.47 2.69 0 4.36 1.02-.84 2.11-.84 3.52 0 4.22 3.59 4.22 1.53 0 2.56-.96 1.02-.96 1.02-2.62 0-3.26-5.5-6.72-4.48-2.94-5.51-4.1-1.72-2.04-1.72-4.6 0-2.56 1.21-5 1.22-2.43 3.46-4.16 4.67-3.58 12.8-3.58 4.16 0 6.62 1.66 2.47 1.67 2.47 4.48 0 2.82-1.7 4.42t-4.77 1.6q-2.11 0-3.13-.7zm12.99 16.06q0-1.73.89-6.08l3.4-17.28h-3.78l.26-1.92q7.68-2.3 15.1-7.94h3.07l-1.53 6.98h4.99l-.58 2.88h-4.93l-3.26 17.28q-.83 3.97-.83 5.31 0 3.07 2.69 3.71-.64 2.18-2.95 3.46-2.3 1.28-5.57 1.28-3.26 0-5.12-2.05-1.85-2.05-1.85-5.63z\"\r\n          fill=\"#fdfdfd\"\r\n        />\r\n      </g>\r\n      <style />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport {Logo}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Importando estilos\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = ({ children }) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalBackground\">{children}</div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n};\r\n\r\nexport { Modal };\r\n","import React, { useContext, useState } from \"react\";\r\n\r\n// Importando contexto\r\nimport { TodoContext } from \"../../TodoContext\";\r\n\r\n// Importando estilos\r\nimport \"./TodoForm.css\";\r\n\r\nconst TodoForm = () => {\r\n  // Manejando estado del valor ingresado en el area\r\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\r\n\r\n  const { addTodo, setOpenModal } = useContext(TodoContext);\r\n\r\n  const onChangeArea = (e) => {\r\n    setNewTodoValue(e.target.value);\r\n  };\r\n\r\n  // Método para el boton de cancelar\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  // Método para cuando hagamos submit al formulario\r\n  const onAdd = (e) => {\r\n    e.preventDefault();\r\n    // Validando que no este vacio\r\n    if(newTodoValue.length <= 0){\r\n        return;\r\n    } \r\n    addTodo(newTodoValue);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onAdd}>\r\n      <label>Ingresa una nueva tarea 😀</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChangeArea}\r\n        placeholder=\"Comprar cervezas\"\r\n      ></textarea>\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoForm-button TodoForm-button-cancel\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancelar\r\n        </button>\r\n        <button type=\"submit\" className=\"TodoForm-button TodoForm-button-add\">\r\n          Agregar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport { TodoForm };\r\n","import React, { Fragment, useContext } from \"react\";\r\n\r\n// Importando context\r\nimport { TodoContext } from \"./TodoContext\";\r\n\r\n// Importando componentes\r\nimport { TodoCounter } from \"./components/TodoCounter/TodoCounter\";\r\nimport { TodoSearch } from \"./components/TodoSearch/TodoSearch\";\r\nimport { TodoList } from \"./components/TodoList/TodoList\";\r\nimport { CreateTodoButton } from \"./components/CreateTodoButton/CreateTodoButton\";\r\nimport { Logo } from \"./components/Logo/Logo\";\r\nimport { Modal } from \"./components/Modal/Modal\";\r\nimport { TodoForm } from \"./components/TodoForm/TodoForm\";\r\n\r\nconst AppUI = () => {\r\n  const {openModal, setOpenModal}=useContext(TodoContext);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Logo />\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n      <TodoList />\r\n      {\r\n        // Validando que open modal sea verdadero\r\n        openModal ? (\r\n          <Modal>\r\n            <TodoForm />\r\n          </Modal>\r\n        )\r\n        :\r\n        null\r\n      }\r\n      \r\n      <CreateTodoButton \r\n        setOpenModal={setOpenModal}\r\n        openModal={openModal}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport { AppUI };\r\n","import React from \"react\";\n\n// Importando provider del context\nimport {TodoProvider} from \"./TodoContext\";\n\n// Importando componentes\nimport { AppUI } from \"./AppUI\";\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}